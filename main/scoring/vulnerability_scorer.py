from datetime import datetime

class VulnerabilityScorer():

    # def __init__(self, base_weight = 1.0 , age_weight = 1.0, hvf_weight = 1.0, allowable_tolerance_weight = 1.0):
    #
    #     self.base_weight = base_weight
    #     self.age_weight = age_weight
    #     self.hvf_weight = hvf_weight
    #     self.allowable_tolerance_weight = allowable_tolerance_weight

    @staticmethod
    def score(base_cvss_score, days_to_double, system_baseline, date_failed_check_YYYYMMDD, allowable_tolerance = 30):

        base_metric = 0.72 if base_cvss_score >= 7.0 else 0.36 if base_cvss_score >= 4.0 else 0.12
        hvf = 1.5 if system_baseline.upper() == 'HIGH' else 1
        date_failed = datetime.strptime(date_failed_check_YYYYMMDD, '%Y%m%d')
        today = datetime.today()
        date_diff = today - date_failed
        days_diff = date_diff.days
        allowable_tolerance_metric = 1 if days_diff > allowable_tolerance else 0


        result = {}
        result['base_metric'] = base_metric
        result['age_metric'] = days_to_double
        result['HVF'] = hvf
        result['allowable_tolerance_metric'] = allowable_tolerance_metric
        result['score'] = base_metric * days_to_double * hvf * allowable_tolerance_metric

        return result


